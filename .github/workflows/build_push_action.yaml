name: Build Docker images & Push to Azure Container Registry

on: 
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  AZURE_WEBAPP_NAME: 'dotnettrainingbankapp'
  ACR_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  ACR_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  FRONTEND_APP_IMAGE_NAME: 'thebankappcontainer.azurecr.io/bankappfrontend:${{ github.sha }}'
  TRACKING_SYSTEM_APP_IMAGE_NAME: 'thebankappcontainer.azurecr.io/banktrackingsystem:${{ github.sha }}'
  BACKEND_APP_IMAGE_NAME: 'thebankappcontainer.azurecr.io/bankappbackend:${{ github.sha }}'

jobs:
  Build:
    name: Build & Push BankAppBackend, BankTrackingSystem, BankAppFrontend
    runs-on: ubuntu-latest
    steps:
      - run: echo "This job was triggered by a ${{ github.event_name }} event"

      - name: Check out bank-app respository
        uses: actions/checkout@v2

      - run: echo "Repository code copied to the ${{ github.workspace }}"

      - name: List repository files
        run: |
          ls ${{ github.workspace }}
      
      - name: Build and push BankAppBackend Docker image
        env:
          PROJECT_ROOT_PATH: 'bank-app-backend'
          DOCKERFILE_PATH: 'BankAppBackend/Dockerfile'
        run: |
          cd $PROJECT_ROOT_PATH
          docker build -f $DOCKERFILE_PATH --force-rm -t ${{ env.BACKEND_APP_IMAGE_NAME }} .
          docker login thebankappcontainer.azurecr.io -u ${{ env.ACR_USERNAME }} -p ${{ env.ACR_PASSWORD }}
          docker push ${{ env.BACKEND_APP_IMAGE_NAME }}
          
      - name: Build and push bank-app-frontend Docker image
        env:
          PROJECT_ROOT_PATH: 'bank-app-frontend'
          DOCKERFILE_PATH: 'bank-app-frontend/Dockerfile'
        run: |
          cd $PROJECT_ROOT_PATH          
          docker build -f $DOCKERFILE_PATH --force-rm -t ${{ env.FRONTEND_APP_IMAGE_NAME }} .
          docker login thebankappcontainer.azurecr.io -u ${{ env.ACR_USERNAME }} -p ${{ env.ACR_PASSWORD }}
          docker push ${{ env.FRONTEND_APP_IMAGE_NAME }}
          
      - name: Build and push BankTrackingSystem Docker image
        env:
          PROJECT_ROOT_PATH: 'BankTrackingSystem'
          DOCKERFILE_PATH: 'Dockerfile'
          IMAGE_NAME: 'thebankappcontainer.azurecr.io/banktrackingsystem:${{ github.sha }}'
        run: |
          cd $PROJECT_ROOT_PATH
          docker build -f $DOCKERFILE_PATH --force-rm -t ${{ env.TRACKING_SYSTEM_APP_IMAGE_NAME }} .
          docker login thebankappcontainer.azurecr.io -u ${{ env.ACR_USERNAME }} -p ${{ env.ACR_PASSWORD }}
          docker push ${{ env.TRACKING_SYSTEM_APP_IMAGE_NAME }}

      # - name: Build and push TestMVCApp
      #   env:
      #     DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      #     DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      #   run: |
      #     # cd 'TestMVCApp'
      #     ls -l
      #     docker build -f 'TestMVCApp/Dockerfile' --force-rm -t thebankappcontainer.azurecr.io/testmvcapp:${{ github.sha }} .
      #     docker login thebankappcontainer.azurecr.io -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
      #     docker push thebankappcontainer.azurecr.io/testmvcapp:${{ github.sha }}

      # - name: Deploy to Azure App Service
      #   uses: Azure/webapps-deploy@v3.0.0
      #   with:
      #     app-name: ${{ env.AZURE_WEBAPP_NAME }}
      #     publish-profile: ${{ secrets.azureWebAppPublishProfileProduction }}
      #     images: ${{ env.FRONTEND_APP_IMAGE_NAME }}
      #     restart: true

  Deploy:
    name: Deploy all built artifacts + dependencies to Container App instances
    needs: Build
    runs-on: ubuntu-latest
    steps:
      - run: echo "This job was triggered by a ${{ github.event_name }} event"

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_SUBSCRIPTION }}

      - name: Azure CLI Script
        uses: azure/CLI@v1
        with:
          azcliversion: latest
          inlineScript: |
            az account show

      - name: Deploy Sql Server
        uses: azure/container-apps-deploy-action@v1
        with:
          resourceGroup: myResourceGroup
          containerAppEnvironment: bank-environment
          containerAppName: bank-app-sql
          imageToDeploy: mcr.microsoft.com/mssql/server:2022-latest
          ingress: internal
          targetPort: 1433
          environmentVariables:
            ACCEPT_EULA=Y
            SA_PASSWORD=YourStrong@Passw0rd

      - name: Deploy Redis
        uses: azure/container-apps-deploy-action@v1
        with:
          resourceGroup: myResourceGroup
          containerAppEnvironment: bank-environment
          containerAppName: bank-app-redis
          imageToDeploy: redis:latest
          ingress: internal
          targetPort: 6379

      - name: Deploy Frontend Container App
        uses: azure/container-apps-deploy-action@v1
        with:
          resourceGroup: myResourceGroup
          containerAppEnvironment: bank-environment
          containerAppName: bank-app-frontend
          acrName: thebankappcontainer
          acrUsername: ${{ secrets.DOCKER_USERNAME }}
          acrPassword: ${{ secrets.DOCKER_PASSWORD }}
          imageToDeploy: ${{ env.FRONTEND_APP_IMAGE_NAME }}
          targetPort: 8080
          environmentVariables:
            BackEndConnection=http://bank-app-backend
            ASPNETCORE_ENVIRONMENT=Production

      - name: Deploy Backend Container App
        uses: azure/container-apps-deploy-action@v1
        with:
          resourceGroup: myResourceGroup
          containerAppEnvironment: bank-environment
          containerAppName: bank-app-backend
          acrName: thebankappcontainer
          acrUsername: ${{ secrets.DOCKER_USERNAME }}
          acrPassword: ${{ secrets.DOCKER_PASSWORD }}
          imageToDeploy: ${{ env.BACKEND_APP_IMAGE_NAME }}
          targetPort: 8081
          environmentVariables:
            ASPNETCORE_ENVIRONMENT=Production
            RedisConnectionString=bank-app-redis.redis.cache.windows.net:6380,password=HEnwEciMkBHZ7YfkcyLe0VRMKEFh7XPR7AzCaOlFdnk=,ssl=True,abortConnect=False
            SQLConnectionString="Server=http://bank-app-sql;Database=BankDb;User Id=sa;Password=YourStrong@Passw0rd;TrustServerCertificate=True;"

      - name: Deploy Tracking Container App
        uses: azure/container-apps-deploy-action@v1
        with:
          resourceGroup: myResourceGroup
          containerAppEnvironment: bank-environment
          containerAppName: bank-app-tracking
          acrName: thebankappcontainer
          acrUsername: ${{ secrets.DOCKER_USERNAME }}
          acrPassword: ${{ secrets.DOCKER_PASSWORD }}
          imageToDeploy: ${{ env.TRACKING_SYSTEM_APP_IMAGE_NAME }}
          targetPort: 8082
          environmentVariables:
            FrontEndConnectionString=http://bank-app-frontend
            ASPNETCORE_ENVIRONMENT=Production
            RedisConnectionString=bank-app-redis.redis.cache.windows.net:6380,password=HEnwEciMkBHZ7YfkcyLe0VRMKEFh7XPR7AzCaOlFdnk=,ssl=True,abortConnect=False

